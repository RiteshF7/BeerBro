rules_version='2'

service cloud.firestore {
  match /databases/{database}/documents {
    // Products - publicly readable, authenticated write
    match /products/{document} {
      allow read: if true; // Public read access for storefront
      allow write: if request.auth != null; // Authenticated write for admin
    }
    
    // Categories - publicly readable, authenticated write
    match /categories/{document} {
      allow read: if true; // Public read access for storefront
      allow write: if request.auth != null; // Authenticated write for admin
    }
    
    // Users - only authenticated access to own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId;
    }
    
    // Orders - only authenticated access to own orders
    match /orders/{orderId} {
      allow read: if request.auth != null && 
        (resource.data.userId == request.auth.uid || 
         request.auth.token.role == 'admin');
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
      allow update, delete: if request.auth != null && 
        (resource.data.userId == request.auth.uid || 
         request.auth.token.role == 'admin');
    }
    
    // Admin collections - require admin role
    match /admin/{document} {
      allow read, write: if request.auth != null && request.auth.token.role == 'admin';
    }
    
    // Delivery zones - publicly readable, admin write
    match /delivery-zones/{document} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.role == 'admin';
    }
    
    // Notifications - user can read own, admin can write
    match /notifications/{document} {
      allow read: if request.auth != null && 
        (resource.data.userId == request.auth.uid || 
         request.auth.token.role == 'admin');
      allow write: if request.auth != null && request.auth.token.role == 'admin';
    }
    
    // Addresses - only authenticated access to own addresses
    match /addresses/{addressId} {
      allow read, write: if request.auth != null && 
        (resource.data.userId == request.auth.uid || 
         request.auth.token.role == 'admin');
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
      allow update, delete: if request.auth != null && 
        (resource.data.userId == request.auth.uid || 
         request.auth.token.role == 'admin');
    }
  }
}
